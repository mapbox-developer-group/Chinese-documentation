{
    "description": {
        "type": "root",
        "children": [
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "A source containing GeoJSON.\n(See the ",
                        "position": {
                            "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                            },
                            "end": {
                                "line": 2,
                                "column": 10,
                                "offset": 38
                            },
                            "indent": [
                                1
                            ]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://www.mapbox.com/mapbox-gl-style-spec/#sources-geojson",
                        "children": [
                            {
                                "type": "text",
                                "value": "Style Specification",
                                "position": {
                                    "start": {
                                        "line": 2,
                                        "column": 11,
                                        "offset": 39
                                    },
                                    "end": {
                                        "line": 2,
                                        "column": 30,
                                        "offset": 58
                                    },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": {
                                "line": 2,
                                "column": 10,
                                "offset": 38
                            },
                            "end": {
                                "line": 2,
                                "column": 93,
                                "offset": 121
                            },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " for detailed documentation of options.)",
                        "position": {
                            "start": {
                                "line": 2,
                                "column": 93,
                                "offset": 121
                            },
                            "end": {
                                "line": 2,
                                "column": 133,
                                "offset": 161
                            },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                    },
                    "end": {
                        "line": 2,
                        "column": 133,
                        "offset": 161
                    },
                    "indent": [
                        1
                    ]
                }
            }
        ],
        "position": {
            "start": {
                "line": 1,
                "column": 1,
                "offset": 0
            },
            "end": {
                "line": 2,
                "column": 133,
                "offset": 161
            }
        }
    },
    "tags": [
        {
            "title": "example",
            "description": "map.addSource('some id', {\n    type: 'geojson',\n    data: 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_ports.geojson'\n});",
            "lineNumber": 4
        },
        {
            "title": "example",
            "description": "map.addSource('some id', {\n   type: 'geojson',\n   data: {\n       \"type\": \"FeatureCollection\",\n       \"features\": [{\n           \"type\": \"Feature\",\n           \"properties\": {},\n           \"geometry\": {\n               \"type\": \"Point\",\n               \"coordinates\": [\n                   -76.53063297271729,\n                   39.18174077994108\n               ]\n           }\n       }]\n   }\n});",
            "lineNumber": 10
        },
        {
            "title": "example",
            "description": "map.getSource('some id').setData({\n  \"type\": \"FeatureCollection\",\n  \"features\": [{\n      \"type\": \"Feature\",\n      \"properties\": { \"name\": \"Null Island\" },\n      \"geometry\": {\n          \"type\": \"Point\",\n          \"coordinates\": [ 0, 0 ]\n      }\n  }]\n});",
            "lineNumber": 29
        },
        {
            "title": "see",
            "description": "[Draw GeoJSON points](https://www.mapbox.com/mapbox-gl-js/example/geojson-markers/)",
            "lineNumber": 41
        },
        {
            "title": "see",
            "description": "[Add a GeoJSON line](https://www.mapbox.com/mapbox-gl-js/example/geojson-line/)",
            "lineNumber": 42
        },
        {
            "title": "see",
            "description": "[Create a heatmap from points](https://www.mapbox.com/mapbox-gl-js/example/heatmap/)",
            "lineNumber": 43
        },
        {
            "title": "see",
            "description": "[Create and style clusters](https://www.mapbox.com/mapbox-gl-js/example/cluster/)",
            "lineNumber": 44
        }
    ],
    "loc": {
        "start": {
            "line": 18,
            "column": 0
        },
        "end": {
            "line": 63,
            "column": 3
        }
    },
    "context": {
        "loc": {
            "start": {
                "line": 64,
                "column": 0
            },
            "end": {
                "line": 335,
                "column": 1
            }
        },
        "file": "/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/source/geojson_source.js"
    },
    "augments": [
        {
            "title": "augments",
            "name": "Evented"
        }
    ],
    "examples": [
        {
            "description": "map.addSource('some id', {\n    type: 'geojson',\n    data: 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_ports.geojson'\n});"
        },
        {
            "description": "map.addSource('some id', {\n   type: 'geojson',\n   data: {\n       \"type\": \"FeatureCollection\",\n       \"features\": [{\n           \"type\": \"Feature\",\n           \"properties\": {},\n           \"geometry\": {\n               \"type\": \"Point\",\n               \"coordinates\": [\n                   -76.53063297271729,\n                   39.18174077994108\n               ]\n           }\n       }]\n   }\n});"
        },
        {
            "description": "map.getSource('some id').setData({\n  \"type\": \"FeatureCollection\",\n  \"features\": [{\n      \"type\": \"Feature\",\n      \"properties\": { \"name\": \"Null Island\" },\n      \"geometry\": {\n          \"type\": \"Point\",\n          \"coordinates\": [ 0, 0 ]\n      }\n  }]\n});"
        }
    ],
    "params": [
        {
            "title": "param",
            "name": "id",
            "lineNumber": 88,
            "type": {
                "type": "NameExpression",
                "name": "string"
            }
        },
        {
            "title": "param",
            "name": "options",
            "lineNumber": 88,
            "type": {
                "type": "AllLiteral"
            }
        },
        {
            "title": "param",
            "name": "dispatcher",
            "lineNumber": 88,
            "type": {
                "type": "NameExpression",
                "name": "Dispatcher"
            }
        },
        {
            "title": "param",
            "name": "eventedParent",
            "lineNumber": 88,
            "type": {
                "type": "NameExpression",
                "name": "Evented"
            }
        }
    ],
    "properties": [],
    "returns": [],
    "sees": [
        {
            "type": "root",
            "children": [
                {
                    "type": "paragraph",
                    "children": [
                        {
                            "type": "link",
                            "title": null,
                            "url": "https://www.mapbox.com/mapbox-gl-js/example/geojson-markers/",
                            "children": [
                                {
                                    "type": "text",
                                    "value": "Draw GeoJSON points",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 2,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 21,
                                            "offset": 20
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 84,
                                    "offset": 83
                                },
                                "indent": []
                            }
                        }
                    ],
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 84,
                            "offset": 83
                        },
                        "indent": []
                    }
                }
            ],
            "position": {
                "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                },
                "end": {
                    "line": 1,
                    "column": 84,
                    "offset": 83
                }
            }
        },
        {
            "type": "root",
            "children": [
                {
                    "type": "paragraph",
                    "children": [
                        {
                            "type": "link",
                            "title": null,
                            "url": "https://www.mapbox.com/mapbox-gl-js/example/geojson-line/",
                            "children": [
                                {
                                    "type": "text",
                                    "value": "Add a GeoJSON line",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 2,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 20,
                                            "offset": 19
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 80,
                                    "offset": 79
                                },
                                "indent": []
                            }
                        }
                    ],
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 80,
                            "offset": 79
                        },
                        "indent": []
                    }
                }
            ],
            "position": {
                "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                },
                "end": {
                    "line": 1,
                    "column": 80,
                    "offset": 79
                }
            }
        },
        {
            "type": "root",
            "children": [
                {
                    "type": "paragraph",
                    "children": [
                        {
                            "type": "link",
                            "title": null,
                            "url": "https://www.mapbox.com/mapbox-gl-js/example/heatmap/",
                            "children": [
                                {
                                    "type": "text",
                                    "value": "Create a heatmap from points",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 2,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 30,
                                            "offset": 29
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 85,
                                    "offset": 84
                                },
                                "indent": []
                            }
                        }
                    ],
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 85,
                            "offset": 84
                        },
                        "indent": []
                    }
                }
            ],
            "position": {
                "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                },
                "end": {
                    "line": 1,
                    "column": 85,
                    "offset": 84
                }
            }
        },
        {
            "type": "root",
            "children": [
                {
                    "type": "paragraph",
                    "children": [
                        {
                            "type": "link",
                            "title": null,
                            "url": "https://www.mapbox.com/mapbox-gl-js/example/cluster/",
                            "children": [
                                {
                                    "type": "text",
                                    "value": "Create and style clusters",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 2,
                                            "offset": 1
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 27,
                                            "offset": 26
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 82,
                                    "offset": 81
                                },
                                "indent": []
                            }
                        }
                    ],
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 82,
                            "offset": 81
                        },
                        "indent": []
                    }
                }
            ],
            "position": {
                "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                },
                "end": {
                    "line": 1,
                    "column": 82,
                    "offset": 81
                }
            }
        }
    ],
    "throws": [],
    "todos": [],
    "constructorComment": {
        "description": "",
        "tags": [
            {
                "title": "private",
                "description": null,
                "lineNumber": 1
            }
        ],
        "loc": {
            "start": {
                "line": 85,
                "column": 4
            },
            "end": {
                "line": 87,
                "column": 7
            }
        },
        "context": {
            "loc": {
                "start": {
                    "line": 88,
                    "column": 4
                },
                "end": {
                    "line": 144,
                    "column": 5
                }
            },
            "file": "/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/source/geojson_source.js",
            "sortKey": "!/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/index.js:00000011!/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/style/style.js:00000018!/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/source/geojson_source.js 00000088",
            "code": "{\n    type: 'geojson';\n    id: string;\n    minzoom: number;\n    maxzoom: number;\n    tileSize: number;\n    attribution: string;\n\n    isTileClipped: boolean;\n    reparseOverscaled: boolean;\n    _data: GeoJSON | string;\n    _options: any;\n    workerOptions: any;\n    dispatcher: Dispatcher;\n    map: Map;\n    workerID: number;\n    _loaded: boolean;\n    _collectResourceTiming: boolean;\n    _resourceTiming: Array<PerformanceResourceTiming>;\n    _removed: boolean;\n\n    /**\n     * @private\n     */\n    constructor(id: string, options: GeoJSONSourceSpecification & {workerOptions?: any, collectResourceTiming: boolean}, dispatcher: Dispatcher, eventedParent: Evented) {\n        super();\n\n        this.id = id;\n\n        // `type` is a property rather than a constant to make it easy for 3rd\n        // parties to use GeoJSONSource to build their own source types.\n        this.type = 'geojson';\n\n        this.minzoom = 0;\n        this.maxzoom = 18;\n        this.tileSize = 512;\n        this.isTileClipped = true;\n        this.reparseOverscaled = true;\n        this._removed = false;\n\n        this.dispatcher = dispatcher;\n        this.setEventedParent(eventedParent);\n\n        this._data = (options.data: any);\n        this._options = extend({}, options);\n\n        this._collectResourceTiming = options.collectResourceTiming;\n        this._resourceTiming = [];\n\n        if (options.maxzoom !== undefined) this.maxzoom = options.maxzoom;\n        if (options.type) this.type = options.type;\n        if (options.attribution) this.attribution = options.attribution;\n\n        const scale = EXTENT / this.tileSize;\n\n        // sent to the worker, along with `url: ...` or `data: literal geojson`,\n        // so that it can load/parse/index the geojson data\n        // extending with `options.workerOptions` helps to make it easy for\n        // third-party sources to hack/reuse GeoJSONSource.\n        this.workerOptions = extend({\n            source: this.id,\n            cluster: options.cluster || false,\n            geojsonVtOptions: {\n                buffer: (options.buffer !== undefined ? options.buffer : 128) * scale,\n                tolerance: (options.tolerance !== undefined ? options.tolerance : 0.375) * scale,\n                extent: EXTENT,\n                maxZoom: this.maxzoom,\n                lineMetrics: options.lineMetrics || false,\n                generateId: options.generateId || false\n            },\n            superclusterOptions: {\n                maxZoom: options.clusterMaxZoom !== undefined ?\n                    Math.min(options.clusterMaxZoom, this.maxzoom - 1) :\n                    (this.maxzoom - 1),\n                extent: EXTENT,\n                radius: (options.clusterRadius || 50) * scale,\n                log: false\n            },\n            clusterProperties: options.clusterProperties\n        }, options.workerOptions);\n    }\n\n    load() {\n        this.fire(new Event('dataloading', {dataType: 'source'}));\n        this._updateWorkerData((err) => {\n            if (err) {\n                this.fire(new ErrorEvent(err));\n                return;\n            }\n\n            const data: Object = { dataType: 'source', sourceDataType: 'metadata' };\n            if (this._collectResourceTiming && this._resourceTiming && (this._resourceTiming.length > 0)) {\n                data.resourceTiming = this._resourceTiming;\n                this._resourceTiming = [];\n            }\n\n            // although GeoJSON sources contain no metadata, we fire this event to let the SourceCache\n            // know its ok to start requesting tiles.\n            this.fire(new Event('data', data));\n        });\n    }\n\n    onAdd(map: Map) {\n        this.map = map;\n        this.load();\n    }\n\n    /**\n     * Sets the GeoJSON data and re-renders the map.\n     *\n     * @param {Object|string} data A GeoJSON data object or a URL to one. The latter is preferable in the case of large GeoJSON files.\n     * @returns {GeoJSONSource} this\n     */\n    setData(data: GeoJSON | string) {\n        this._data = data;\n        this.fire(new Event('dataloading', {dataType: 'source'}));\n        this._updateWorkerData((err) => {\n            if (err) {\n                this.fire(new ErrorEvent(err));\n                return;\n            }\n\n            const data: Object = { dataType: 'source', sourceDataType: 'content' };\n            if (this._collectResourceTiming && this._resourceTiming && (this._resourceTiming.length > 0)) {\n                data.resourceTiming = this._resourceTiming;\n                this._resourceTiming = [];\n            }\n            this.fire(new Event('data', data));\n        });\n\n        return this;\n    }\n\n    /**\n     * For clustered sources, fetches the zoom at which the given cluster expands.\n     *\n     * @param clusterId The value of the cluster's `cluster_id` property.\n     * @param callback A callback to be called when the zoom value is retrieved (`(error, zoom) => { ... }`).\n     * @returns {GeoJSONSource} this\n     */\n    getClusterExpansionZoom(clusterId: number, callback: Callback<number>) {\n        this.dispatcher.send('geojson.getClusterExpansionZoom', { clusterId, source: this.id }, callback, this.workerID);\n        return this;\n    }\n\n    /**\n     * For clustered sources, fetches the children of the given cluster on the next zoom level (as an array of GeoJSON features).\n     *\n     * @param clusterId The value of the cluster's `cluster_id` property.\n     * @param callback A callback to be called when the features are retrieved (`(error, features) => { ... }`).\n     * @returns {GeoJSONSource} this\n     */\n    getClusterChildren(clusterId: number, callback: Callback<Array<GeoJSONFeature>>) {\n        this.dispatcher.send('geojson.getClusterChildren', { clusterId, source: this.id }, callback, this.workerID);\n        return this;\n    }\n\n    /**\n     * For clustered sources, fetches the original points that belong to the cluster (as an array of GeoJSON features).\n     *\n     * @param clusterId The value of the cluster's `cluster_id` property.\n     * @param limit The maximum number of features to return.\n     * @param offset The number of features to skip (e.g. for pagination).\n     * @param callback A callback to be called when the features are retrieved (`(error, features) => { ... }`).\n     * @returns {GeoJSONSource} this\n     */\n    getClusterLeaves(clusterId: number, limit: number, offset: number, callback: Callback<Array<GeoJSONFeature>>) {\n        this.dispatcher.send('geojson.getClusterLeaves', {\n            source: this.id,\n            clusterId,\n            limit,\n            offset\n        }, callback, this.workerID);\n        return this;\n    }\n\n    /*\n     * Responsible for invoking WorkerSource's geojson.loadData target, which\n     * handles loading the geojson data and preparing to serve it up as tiles,\n     * using geojson-vt or supercluster as appropriate.\n     */\n    _updateWorkerData(callback: Callback<void>) {\n        const options = extend({}, this.workerOptions);\n        const data = this._data;\n        if (typeof data === 'string') {\n            options.request = this.map._requestManager.transformRequest(browser.resolveURL(data), ResourceType.Source);\n            options.request.collectResourceTiming = this._collectResourceTiming;\n        } else {\n            options.data = JSON.stringify(data);\n        }\n\n        // target {this.type}.loadData rather than literally geojson.loadData,\n        // so that other geojson-like source types can easily reuse this\n        // implementation\n        this.workerID = this.dispatcher.send(`${this.type}.loadData`, options, (err, result) => {\n            if (this._removed || (result && result.abandoned)) {\n                return;\n            }\n\n            this._loaded = true;\n\n            if (result && result.resourceTiming && result.resourceTiming[this.id])\n                this._resourceTiming = result.resourceTiming[this.id].slice(0);\n            // Any `loadData` calls that piled up while we were processing\n            // this one will get coalesced into a single call when this\n            // 'coalesce' message is processed.\n            // We would self-send from the worker if we had access to its\n            // message queue. Waiting instead for the 'coalesce' to round-trip\n            // through the foreground just means we're throttling the worker\n            // to run at a little less than full-throttle.\n            this.dispatcher.send(`${this.type}.coalesce`, { source: options.source }, null, this.workerID);\n            callback(err);\n\n        }, this.workerID);\n    }\n\n    loadTile(tile: Tile, callback: Callback<void>) {\n        const message = tile.workerID === undefined ? 'loadTile' : 'reloadTile';\n        const params = {\n            type: this.type,\n            uid: tile.uid,\n            tileID: tile.tileID,\n            zoom: tile.tileID.overscaledZ,\n            maxZoom: this.maxzoom,\n            tileSize: this.tileSize,\n            source: this.id,\n            pixelRatio: browser.devicePixelRatio,\n            showCollisionBoxes: this.map.showCollisionBoxes\n        };\n\n        tile.workerID = this.dispatcher.send(message, params, (err, data) => {\n            tile.unloadVectorData();\n\n            if (tile.aborted) {\n                return callback(null);\n            }\n\n            if (err) {\n                return callback(err);\n            }\n\n            tile.loadVectorData(data, this.map.painter, message === 'reloadTile');\n\n            return callback(null);\n        }, this.workerID);\n    }\n\n    abortTile(tile: Tile) {\n        tile.aborted = true;\n    }\n\n    unloadTile(tile: Tile) {\n        tile.unloadVectorData();\n        this.dispatcher.send('removeTile', { uid: tile.uid, type: this.type, source: this.id }, null, tile.workerID);\n    }\n\n    onRemove() {\n        this._removed = true;\n        this.dispatcher.send('removeSource', { type: this.type, source: this.id }, null, this.workerID);\n    }\n\n    serialize() {\n        return extend({}, this._options, {\n            type: this.type,\n            data: this._data\n        });\n    }\n\n    hasTransition() {\n        return false;\n    }\n}"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "access": "private"
    },
    "name": "GeoJSONSource",
    "kind": "class",
    "path": [
        {
            "name": "GeoJSONSource",
            "kind": "class"
        }
    ],
    "members": {
        "global": [],
        "inner": [],
        "instance": [
            {
                "description": {
                    "type": "root",
                    "children": [
                        {
                            "type": "paragraph",
                            "children": [
                                {
                                    "type": "text",
                                    "value": "Sets the GeoJSON data and re-renders the map.",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 46,
                                            "offset": 45
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 46,
                                    "offset": 45
                                },
                                "indent": []
                            }
                        }
                    ],
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 46,
                            "offset": 45
                        }
                    }
                },
                "tags": [
                    {
                        "title": "param",
                        "description": "A GeoJSON data object or a URL to one. The latter is preferable in the case of large GeoJSON files.",
                        "lineNumber": 3,
                        "type": {
                            "type": "UnionType",
                            "elements": [
                                {
                                    "type": "NameExpression",
                                    "name": "Object"
                                },
                                {
                                    "type": "NameExpression",
                                    "name": "string"
                                }
                            ]
                        },
                        "name": "data"
                    },
                    {
                        "title": "returns",
                        "description": "this",
                        "lineNumber": 4,
                        "type": {
                            "type": "NameExpression",
                            "name": "GeoJSONSource"
                        }
                    }
                ],
                "loc": {
                    "start": {
                        "line": 171,
                        "column": 4
                    },
                    "end": {
                        "line": 176,
                        "column": 7
                    }
                },
                "context": {
                    "loc": {
                        "start": {
                            "line": 177,
                            "column": 4
                        },
                        "end": {
                            "line": 195,
                            "column": 5
                        }
                    },
                    "file": "/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/source/geojson_source.js"
                },
                "augments": [],
                "examples": [],
                "params": [
                    {
                        "title": "param",
                        "name": "data",
                        "lineNumber": 3,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "A GeoJSON data object or a URL to one. The latter is preferable in the case of large GeoJSON files.",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 100,
                                                    "offset": 99
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 100,
                                            "offset": 99
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 100,
                                    "offset": 99
                                }
                            }
                        },
                        "type": {
                            "type": "UnionType",
                            "elements": [
                                {
                                    "type": "NameExpression",
                                    "name": "Object"
                                },
                                {
                                    "type": "NameExpression",
                                    "name": "string"
                                }
                            ]
                        }
                    }
                ],
                "properties": [],
                "returns": [
                    {
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "this",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 5,
                                                    "offset": 4
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 5,
                                            "offset": 4
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 5,
                                    "offset": 4
                                }
                            }
                        },
                        "title": "returns",
                        "type": {
                            "type": "NameExpression",
                            "name": "GeoJSONSource"
                        }
                    }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "name": "setData",
                "kind": "function",
                "memberof": "GeoJSONSource",
                "scope": "instance",
                "members": {
                    "global": [],
                    "inner": [],
                    "instance": [],
                    "events": [],
                    "static": []
                },
                "path": [
                    {
                        "name": "GeoJSONSource",
                        "kind": "class"
                    },
                    {
                        "name": "setData",
                        "kind": "function",
                        "scope": "instance"
                    }
                ],
                "namespace": "GeoJSONSource#setData"
            },
            {
                "description": {
                    "type": "root",
                    "children": [
                        {
                            "type": "paragraph",
                            "children": [
                                {
                                    "type": "text",
                                    "value": "For clustered sources, fetches the zoom at which the given cluster expands.",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 76,
                                            "offset": 75
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 76,
                                    "offset": 75
                                },
                                "indent": []
                            }
                        }
                    ],
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 76,
                            "offset": 75
                        }
                    }
                },
                "tags": [
                    {
                        "title": "param",
                        "description": "The value of the cluster's `cluster_id` property.",
                        "lineNumber": 3,
                        "type": null,
                        "name": "clusterId"
                    },
                    {
                        "title": "param",
                        "description": "A callback to be called when the zoom value is retrieved (`(error, zoom) => { ... }`).",
                        "lineNumber": 4,
                        "type": null,
                        "name": "callback"
                    },
                    {
                        "title": "returns",
                        "description": "this",
                        "lineNumber": 5,
                        "type": {
                            "type": "NameExpression",
                            "name": "GeoJSONSource"
                        }
                    }
                ],
                "loc": {
                    "start": {
                        "line": 197,
                        "column": 4
                    },
                    "end": {
                        "line": 203,
                        "column": 7
                    }
                },
                "context": {
                    "loc": {
                        "start": {
                            "line": 204,
                            "column": 4
                        },
                        "end": {
                            "line": 207,
                            "column": 5
                        }
                    },
                    "file": "/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/source/geojson_source.js"
                },
                "augments": [],
                "examples": [],
                "params": [
                    {
                        "title": "param",
                        "name": "clusterId",
                        "lineNumber": 3,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "The value of the cluster's ",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 28,
                                                    "offset": 27
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "inlineCode",
                                            "value": "cluster_id",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 28,
                                                    "offset": 27
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 40,
                                                    "offset": 39
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "text",
                                            "value": " property.",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 40,
                                                    "offset": 39
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 50,
                                                    "offset": 49
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 50,
                                            "offset": 49
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 50,
                                    "offset": 49
                                }
                            }
                        },
                        "type": {
                            "type": "NameExpression",
                            "name": "number"
                        }
                    },
                    {
                        "title": "param",
                        "name": "callback",
                        "lineNumber": 4,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "A callback to be called when the zoom value is retrieved (",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 59,
                                                    "offset": 58
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "inlineCode",
                                            "value": "(error, zoom) => { ... }",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 59,
                                                    "offset": 58
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 85,
                                                    "offset": 84
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "text",
                                            "value": ").",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 85,
                                                    "offset": 84
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 87,
                                                    "offset": 86
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 87,
                                            "offset": 86
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 87,
                                    "offset": 86
                                }
                            }
                        },
                        "type": {
                            "type": "TypeApplication",
                            "expression": {
                                "type": "NameExpression",
                                "name": "Callback"
                            },
                            "applications": [
                                {
                                    "type": "NameExpression",
                                    "name": "number"
                                }
                            ]
                        }
                    }
                ],
                "properties": [],
                "returns": [
                    {
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "this",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 5,
                                                    "offset": 4
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 5,
                                            "offset": 4
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 5,
                                    "offset": 4
                                }
                            }
                        },
                        "title": "returns",
                        "type": {
                            "type": "NameExpression",
                            "name": "GeoJSONSource"
                        }
                    }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "name": "getClusterExpansionZoom",
                "kind": "function",
                "memberof": "GeoJSONSource",
                "scope": "instance",
                "members": {
                    "global": [],
                    "inner": [],
                    "instance": [],
                    "events": [],
                    "static": []
                },
                "path": [
                    {
                        "name": "GeoJSONSource",
                        "kind": "class"
                    },
                    {
                        "name": "getClusterExpansionZoom",
                        "kind": "function",
                        "scope": "instance"
                    }
                ],
                "namespace": "GeoJSONSource#getClusterExpansionZoom"
            },
            {
                "description": {
                    "type": "root",
                    "children": [
                        {
                            "type": "paragraph",
                            "children": [
                                {
                                    "type": "text",
                                    "value": "For clustered sources, fetches the children of the given cluster on the next zoom level (as an array of GeoJSON features).",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 123,
                                            "offset": 122
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 123,
                                    "offset": 122
                                },
                                "indent": []
                            }
                        }
                    ],
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 123,
                            "offset": 122
                        }
                    }
                },
                "tags": [
                    {
                        "title": "param",
                        "description": "The value of the cluster's `cluster_id` property.",
                        "lineNumber": 3,
                        "type": null,
                        "name": "clusterId"
                    },
                    {
                        "title": "param",
                        "description": "A callback to be called when the features are retrieved (`(error, features) => { ... }`).",
                        "lineNumber": 4,
                        "type": null,
                        "name": "callback"
                    },
                    {
                        "title": "returns",
                        "description": "this",
                        "lineNumber": 5,
                        "type": {
                            "type": "NameExpression",
                            "name": "GeoJSONSource"
                        }
                    }
                ],
                "loc": {
                    "start": {
                        "line": 209,
                        "column": 4
                    },
                    "end": {
                        "line": 215,
                        "column": 7
                    }
                },
                "context": {
                    "loc": {
                        "start": {
                            "line": 216,
                            "column": 4
                        },
                        "end": {
                            "line": 219,
                            "column": 5
                        }
                    },
                    "file": "/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/source/geojson_source.js"
                },
                "augments": [],
                "examples": [],
                "params": [
                    {
                        "title": "param",
                        "name": "clusterId",
                        "lineNumber": 3,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "The value of the cluster's ",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 28,
                                                    "offset": 27
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "inlineCode",
                                            "value": "cluster_id",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 28,
                                                    "offset": 27
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 40,
                                                    "offset": 39
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "text",
                                            "value": " property.",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 40,
                                                    "offset": 39
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 50,
                                                    "offset": 49
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 50,
                                            "offset": 49
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 50,
                                    "offset": 49
                                }
                            }
                        },
                        "type": {
                            "type": "NameExpression",
                            "name": "number"
                        }
                    },
                    {
                        "title": "param",
                        "name": "callback",
                        "lineNumber": 4,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "A callback to be called when the features are retrieved (",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 58,
                                                    "offset": 57
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "inlineCode",
                                            "value": "(error, features) => { ... }",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 58,
                                                    "offset": 57
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 88,
                                                    "offset": 87
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "text",
                                            "value": ").",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 88,
                                                    "offset": 87
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 90,
                                                    "offset": 89
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 90,
                                            "offset": 89
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 90,
                                    "offset": 89
                                }
                            }
                        },
                        "type": {
                            "type": "TypeApplication",
                            "expression": {
                                "type": "NameExpression",
                                "name": "Callback"
                            },
                            "applications": [
                                {
                                    "type": "TypeApplication",
                                    "expression": {
                                        "type": "NameExpression",
                                        "name": "Array"
                                    },
                                    "applications": [
                                        {
                                            "type": "NameExpression",
                                            "name": "GeoJSONFeature"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "properties": [],
                "returns": [
                    {
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "this",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 5,
                                                    "offset": 4
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 5,
                                            "offset": 4
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 5,
                                    "offset": 4
                                }
                            }
                        },
                        "title": "returns",
                        "type": {
                            "type": "NameExpression",
                            "name": "GeoJSONSource"
                        }
                    }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "name": "getClusterChildren",
                "kind": "function",
                "memberof": "GeoJSONSource",
                "scope": "instance",
                "members": {
                    "global": [],
                    "inner": [],
                    "instance": [],
                    "events": [],
                    "static": []
                },
                "path": [
                    {
                        "name": "GeoJSONSource",
                        "kind": "class"
                    },
                    {
                        "name": "getClusterChildren",
                        "kind": "function",
                        "scope": "instance"
                    }
                ],
                "namespace": "GeoJSONSource#getClusterChildren"
            },
            {
                "description": {
                    "type": "root",
                    "children": [
                        {
                            "type": "paragraph",
                            "children": [
                                {
                                    "type": "text",
                                    "value": "For clustered sources, fetches the original points that belong to the cluster (as an array of GeoJSON features).",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 113,
                                            "offset": 112
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 113,
                                    "offset": 112
                                },
                                "indent": []
                            }
                        }
                    ],
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 1,
                            "column": 113,
                            "offset": 112
                        }
                    }
                },
                "tags": [
                    {
                        "title": "param",
                        "description": "The value of the cluster's `cluster_id` property.",
                        "lineNumber": 3,
                        "type": null,
                        "name": "clusterId"
                    },
                    {
                        "title": "param",
                        "description": "The maximum number of features to return.",
                        "lineNumber": 4,
                        "type": null,
                        "name": "limit"
                    },
                    {
                        "title": "param",
                        "description": "The number of features to skip (e.g. for pagination).",
                        "lineNumber": 5,
                        "type": null,
                        "name": "offset"
                    },
                    {
                        "title": "param",
                        "description": "A callback to be called when the features are retrieved (`(error, features) => { ... }`).",
                        "lineNumber": 6,
                        "type": null,
                        "name": "callback"
                    },
                    {
                        "title": "returns",
                        "description": "this",
                        "lineNumber": 7,
                        "type": {
                            "type": "NameExpression",
                            "name": "GeoJSONSource"
                        }
                    }
                ],
                "loc": {
                    "start": {
                        "line": 221,
                        "column": 4
                    },
                    "end": {
                        "line": 229,
                        "column": 7
                    }
                },
                "context": {
                    "loc": {
                        "start": {
                            "line": 230,
                            "column": 4
                        },
                        "end": {
                            "line": 238,
                            "column": 5
                        }
                    },
                    "file": "/Users/mapboxchina/projects/cn-web-minlab/docs/mapbox-gl-js/src/source/geojson_source.js"
                },
                "augments": [],
                "examples": [],
                "params": [
                    {
                        "title": "param",
                        "name": "clusterId",
                        "lineNumber": 3,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "The value of the cluster's ",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 28,
                                                    "offset": 27
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "inlineCode",
                                            "value": "cluster_id",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 28,
                                                    "offset": 27
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 40,
                                                    "offset": 39
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "text",
                                            "value": " property.",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 40,
                                                    "offset": 39
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 50,
                                                    "offset": 49
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 50,
                                            "offset": 49
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 50,
                                    "offset": 49
                                }
                            }
                        },
                        "type": {
                            "type": "NameExpression",
                            "name": "number"
                        }
                    },
                    {
                        "title": "param",
                        "name": "limit",
                        "lineNumber": 4,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "The maximum number of features to return.",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 42,
                                                    "offset": 41
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 42,
                                            "offset": 41
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 42,
                                    "offset": 41
                                }
                            }
                        },
                        "type": {
                            "type": "NameExpression",
                            "name": "number"
                        }
                    },
                    {
                        "title": "param",
                        "name": "offset",
                        "lineNumber": 5,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "The number of features to skip (e.g. for pagination).",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 54,
                                                    "offset": 53
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 54,
                                            "offset": 53
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 54,
                                    "offset": 53
                                }
                            }
                        },
                        "type": {
                            "type": "NameExpression",
                            "name": "number"
                        }
                    },
                    {
                        "title": "param",
                        "name": "callback",
                        "lineNumber": 6,
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "A callback to be called when the features are retrieved (",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 58,
                                                    "offset": 57
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "inlineCode",
                                            "value": "(error, features) => { ... }",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 58,
                                                    "offset": 57
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 88,
                                                    "offset": 87
                                                },
                                                "indent": []
                                            }
                                        },
                                        {
                                            "type": "text",
                                            "value": ").",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 88,
                                                    "offset": 87
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 90,
                                                    "offset": 89
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 90,
                                            "offset": 89
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 90,
                                    "offset": 89
                                }
                            }
                        },
                        "type": {
                            "type": "TypeApplication",
                            "expression": {
                                "type": "NameExpression",
                                "name": "Callback"
                            },
                            "applications": [
                                {
                                    "type": "TypeApplication",
                                    "expression": {
                                        "type": "NameExpression",
                                        "name": "Array"
                                    },
                                    "applications": [
                                        {
                                            "type": "NameExpression",
                                            "name": "GeoJSONFeature"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "properties": [],
                "returns": [
                    {
                        "description": {
                            "type": "root",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "this",
                                            "position": {
                                                "start": {
                                                    "line": 1,
                                                    "column": 1,
                                                    "offset": 0
                                                },
                                                "end": {
                                                    "line": 1,
                                                    "column": 5,
                                                    "offset": 4
                                                },
                                                "indent": []
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 1,
                                            "offset": 0
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 5,
                                            "offset": 4
                                        },
                                        "indent": []
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 1,
                                    "column": 5,
                                    "offset": 4
                                }
                            }
                        },
                        "title": "returns",
                        "type": {
                            "type": "NameExpression",
                            "name": "GeoJSONSource"
                        }
                    }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "name": "getClusterLeaves",
                "kind": "function",
                "memberof": "GeoJSONSource",
                "scope": "instance",
                "members": {
                    "global": [],
                    "inner": [],
                    "instance": [],
                    "events": [],
                    "static": []
                },
                "path": [
                    {
                        "name": "GeoJSONSource",
                        "kind": "class"
                    },
                    {
                        "name": "getClusterLeaves",
                        "kind": "function",
                        "scope": "instance"
                    }
                ],
                "namespace": "GeoJSONSource#getClusterLeaves"
            }
        ],
        "events": [],
        "static": []
    },
    "namespace": "GeoJSONSource"
}